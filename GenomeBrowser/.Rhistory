# Functions -------------------------------------------------------------------------------------------
source("./visualise_ER_example_gviz_sonia.R")
# Main ------------------------------------------------------------------------------------------------
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
library(tidyverse)
library(stringr)
library(Gviz)
library(ggpubr)
library(regioneR)
# Set WD ----------------------------------------------------------------------------------------------
#OMIM_wd <- Sys.getenv("OMIM_wd")
#setwd(OMIM_wd)
# Load data -------------------------------------------------------------------------------------------
# Functions -------------------------------------------------------------------------------------------
source("./visualise_ER_example_gviz_sonia.R")
# Main ------------------------------------------------------------------------------------------------
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
dev.print(file = "SNCA_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000134086",
tissues_to_plot = c("brain_cerebellar_hemisphere", "lung"),
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 3000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
dev.print(file = "ERLIN1_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
dirname
library(tidyverse)
library(stringr)
library(Gviz)
library(ggpubr)
library(regioneR)
# Set WD ----------------------------------------------------------------------------------------------
#OMIM_wd <- Sys.getenv("OMIM_wd")
#setwd(OMIM_wd)
# Load data -------------------------------------------------------------------------------------------
# Functions -------------------------------------------------------------------------------------------
source("~/R/Proof_Concept/visualise_ER_example_gviz_sonia.R")
# Main ------------------------------------------------------------------------------------------------
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
dev.print(file = "SNCA_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000134086",
tissues_to_plot = c("brain_cerebellar_hemisphere", "lung"),
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 3000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
dev.print(file = "ERLIN1_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
library(tidyverse)
library(stringr)
library(Gviz)
library(ggpubr)
library(regioneR)
# Set WD ----------------------------------------------------------------------------------------------
#OMIM_wd <- Sys.getenv("OMIM_wd")
#setwd(OMIM_wd)
# Load data -------------------------------------------------------------------------------------------
# Functions -------------------------------------------------------------------------------------------
source("~/R/Proof_Concept/visualise_ER_example_gviz_sonia.R")
# Main ------------------------------------------------------------------------------------------------
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
dev.print(file = "~/R/Proof_Concept/SNCA_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
#visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
#                     txdb = ensembl_grch38_v92_genes_txdb,
#                     ensembl_gene_id = "ENSG00000134086",
#                     tissues_to_plot = c("brain_cerebellar_hemisphere", "lung"),
#                     genome_build = "hg38",
#                     gtex_split_read_table_mean_cov_df,
#                     tissue_optimal_cut_off_max_gap_df,
#                     get_constraint = F,
#                     get_conserv = F,
#                     propor_samples_split_read = 0.05,
#                     extend_region_to_plot = 3000,
#                     collapseTranscripts = "meta",
#                     transcriptAnnotation = "gene",
#                     aceview_annot = NULL,
#                     add_custom_annot_track = NULL,
#                     all_split_reads = F)
#dev.print(file = "~/R/Proof_Concept/ERLIN1_OMIM_reannot_example.png", device = png, res = 600, width = 10, height = 11.69/2, units = "in")
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
ERs_w_annotation_df <- ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific
txdb <- ensembl_grch38_v92_genes_txdb
ensembl_gene_id <- "ENSG00000145335"
tissues_to_plot <- c("frontalcortexba9")
genome_build <- "hg38"
get_constraint <- F
get_conserv <- F
propor_samples_split_read <- 0.05
extend_region_to_plot <- 30000
aceview_annot <- aceview_hg38_txdb
add_custom_annot_track <- GRanges(str_c(SNCA_locus_inde_signals$chr, ":",
SNCA_locus_inde_signals$start, "-",
SNCA_locus_inde_signals$end))
all_split_reads <- T
ensembl_grch38_v92_genes_txdb_genes <- genes(ensembl_grch38_v92_genes_txdb)
if(!ensembl_gene_id %in% ensembl_grch38_v92_genes_txdb_genes$gene_id){
stop(str_c(ensembl_gene_id, " not found in the txdb provided"))
}
if(all(!tissues_to_plot %in% ERs_w_annotation_df$tissue)){
stop(str_c(tissues_to_plot, " not found in tissues"))
}
gene_cord <- ensembl_grch38_v92_genes_txdb_genes[ensembl_grch38_v92_genes_txdb_genes$gene_id == ensembl_gene_id]
seqnames_to_plot <- as.character(seqnames(gene_cord))
start_to_plot <- (start(gene_cord) - extend_region_to_plot)
end_to_plot <- (end(gene_cord) + extend_region_to_plot)
bp_plotted <- end_to_plot - start_to_plot
ERs_w_annotation_df_to_plot <-
ERs_w_annotation_df %>%
dplyr::filter(seqnames == seqnames_to_plot, start >= start_to_plot, end <= end_to_plot,
tissue %in% tissues_to_plot)
ens_to_symbol <- query_biomart(mart = 38, attributes = c("ensembl_gene_id", "external_gene_name"), filters = "ensembl_gene_id", values = ensembl_gene_id)
gene_id_to_plot <- str_c(na.omit(c(ens_to_symbol$ensembl_gene_id, ens_to_symbol$external_gene_name)), collapse = "/")
ga_track <- GenomeAxisTrack(range = IRanges(start = start(gene_cord), end = end(gene_cord), names = gene_id_to_plot),
showId = TRUE, add53 = TRUE, add35 = TRUE,
fill.range = get_palette("npg", 3)[3], col.range = "black",
cex.id = 1, col = "black", fontcolor = "black", labelPos = "below", size = 2,
background.title = "black", showTitle = T, name = seqnames_to_plot)
annot_track_ERs_all_tissues <- get_annot_track_ERs(ERs_w_annotation_df_to_plot, tissues_to_plot)
d_track_split_read_overlayed_all_tissues <-
get_data_track_split_read(tissues_to_plot = tissues_to_plot,
gtex_split_read_table_mean_cov_df = gtex_split_read_table_mean_cov_df,
ERs_w_annotation_df_to_plot = ERs_w_annotation_df_to_plot,
gtex_split_read_table_annotated_only_junc_coverage = gtex_split_read_table_annotated_only_junc_coverage,
propor_samples_split_read = propor_samples_split_read,
gene_cord = gene_cord,
extend_region_to_plot = extend_region_to_plot,
all_split_reads = all_split_reads)
ER_split_tracks_ordered_all_tissues <- merge_ER_split_read_tracks(tissues_to_plot, annot_track_ERs_all_tissues, d_track_split_read_overlayed_all_tissues)
print("plotting gene region track for ensembl v92")
gr_track <- GeneRegionTrack(ensembl_grch38_v92_genes_txdb, genome = genome_build, chromosome = seqnames_to_plot, name = "v92",
collapseTranscripts = collapseTranscripts, transcriptAnnotation = transcriptAnnotation, from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(ga_track, ER_split_tracks_ordered_all_tissues, gr_track)
if(!is.null(aceview_annot)){
if(class(aceview_annot) != "TxDb"){
print("Warning: AceView input not a txdb, skipping adding this as a genome region track")
}else{
print("plotting gene region track for aceview")
gr_track_aceview <- GeneRegionTrack(aceview_annot, genome = genome_build, chromosome = seqnames_to_plot, name = "AV",
collapseTranscripts = "meta", transcriptAnnotation = "gene", from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(all_annot_tracks, gr_track_aceview)
}
}
# only plot mean cov/constraint/conserv for single tissue
if(length(tissues_to_plot) == 1){
##### get GR for data tracks - mean coverage/conservation #####
range_to_plot_ir <- IRanges(start = start_to_plot:end_to_plot, width = 1)
range_to_plot_gr <- GRanges(seqnames = seqnames_to_plot,
range_to_plot_ir)
##### Data track - mean coverage #####
d_track_mean_cov_w_cut_off <- get_data_track_mean_cov(gtex_split_read_table_mean_cov_df, tissues_to_plot, range_to_plot_ir, range_to_plot_gr, seqnames_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_mean_cov_w_cut_off)
##### Data track - conservation #####
if(get_conserv == T){
range_to_plot_gr <-
get_conservation_score_for_regions(conserv_score_to_load = "phast_cons_7", gr = range_to_plot_gr)
d_track_conserv <- DataTrack(range_to_plot_gr, type = "a", aggregation = "mean", window = "fixed", windowSize = 25, background.title = "black",
name = "phastcons", size = 1)
# plotTracks(d_track_conserv, from = start_to_plot, to = end_to_plot)
range_to_plot_gr$mean_phast_cons_7 <- NULL
all_annot_tracks <- c(all_annot_tracks, d_track_conserv)
}
##### Data track - constraint #####
if(get_constraint == T){
d_track_constraint <- get_data_track_constraint(seqnames_to_plot, start_to_plot, end_to_plot, CDTS_percentile_N7794_unrelated_all_chrs_gr)
# plotTracks(d_track_constraint, from = start_to_plot, to = end_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_constraint)
}
if(!is.null(add_custom_annot_track)){
annot_track_custom <-
AnnotationTrack(add_custom_annot_track,
shape = "box", name = "custom annot", background.title = "black", size = 1, col = "black", fill = "black")
# plotTracks(annot_track_custom, from = start_to_plot, to = end_to_plot, col = "black", fill = "black")
all_annot_tracks <- c(all_annot_tracks, annot_track_custom)
}
}
collapseTranscripts <-  "all"
transcriptAnnotation <-  "transcript"
gr_track <- GeneRegionTrack(ensembl_grch38_v92_genes_txdb, genome = genome_build, chromosome = seqnames_to_plot, name = "v92",
collapseTranscripts = collapseTranscripts, transcriptAnnotation = transcriptAnnotation, from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(ga_track, ER_split_tracks_ordered_all_tissues, gr_track)
if(!is.null(aceview_annot)){
if(class(aceview_annot) != "TxDb"){
print("Warning: AceView input not a txdb, skipping adding this as a genome region track")
}else{
print("plotting gene region track for aceview")
gr_track_aceview <- GeneRegionTrack(aceview_annot, genome = genome_build, chromosome = seqnames_to_plot, name = "AV",
collapseTranscripts = "meta", transcriptAnnotation = "gene", from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(all_annot_tracks, gr_track_aceview)
}
}
# only plot mean cov/constraint/conserv for single tissue
if(length(tissues_to_plot) == 1){
##### get GR for data tracks - mean coverage/conservation #####
range_to_plot_ir <- IRanges(start = start_to_plot:end_to_plot, width = 1)
range_to_plot_gr <- GRanges(seqnames = seqnames_to_plot,
range_to_plot_ir)
##### Data track - mean coverage #####
d_track_mean_cov_w_cut_off <- get_data_track_mean_cov(gtex_split_read_table_mean_cov_df, tissues_to_plot, range_to_plot_ir, range_to_plot_gr, seqnames_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_mean_cov_w_cut_off)
##### Data track - conservation #####
if(get_conserv == T){
range_to_plot_gr <-
get_conservation_score_for_regions(conserv_score_to_load = "phast_cons_7", gr = range_to_plot_gr)
d_track_conserv <- DataTrack(range_to_plot_gr, type = "a", aggregation = "mean", window = "fixed", windowSize = 25, background.title = "black",
name = "phastcons", size = 1)
# plotTracks(d_track_conserv, from = start_to_plot, to = end_to_plot)
range_to_plot_gr$mean_phast_cons_7 <- NULL
all_annot_tracks <- c(all_annot_tracks, d_track_conserv)
}
##### Data track - constraint #####
if(get_constraint == T){
d_track_constraint <- get_data_track_constraint(seqnames_to_plot, start_to_plot, end_to_plot, CDTS_percentile_N7794_unrelated_all_chrs_gr)
# plotTracks(d_track_constraint, from = start_to_plot, to = end_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_constraint)
}
if(!is.null(add_custom_annot_track)){
annot_track_custom <-
AnnotationTrack(add_custom_annot_track,
shape = "box", name = "custom annot", background.title = "black", size = 1, col = "black", fill = "black")
# plotTracks(annot_track_custom, from = start_to_plot, to = end_to_plot, col = "black", fill = "black")
all_annot_tracks <- c(all_annot_tracks, annot_track_custom)
}
}
list_dummy_tracks <- get_dummy_track_titles(all_annot_tracks, gtex_split_read_table_mean_cov_df)
list_dummy_tracks
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
dev.off()
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
all_annot_tracks
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
plotTracks(all_annot_tracks[[1]])
?plotTracks
Gviz::plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
sessionInfo()
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
all_annot_tracks
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
plotTracks
#' @param genome_build genome build - defaults to hg38 and needs
#' @param gtex_split_read_table_mean_cov_df df that maps the tissue to it's split read or mean coverage path
#' @param get_constraint lgl vector indicating whether to plot constraint scores
#' @param get_conserv lgl vector indicating whether to plot conserv scores
#' @param propor_samples_split_read percentage of samples required that have the split read to plot
#' @param extend_region_to_plot number of bps either side of the gene to add to around plot
#' @param aceview_annot defaults to NULL otherwise, takes the aceview txdb
#' @param add_custom_annot_track here gives the option to input your own positions to plot as a GRanges
#' @param all_split_reads lgl vector determining whether to plot all split reads in the region, not just those that connect to ERs
#' @return Gviz plot to visualise the ERs in the genomic region or by gene
visualise_ER_example <- function(ERs_w_annotation_df, txdb, ensembl_gene_id, tissues_to_plot,
genome_build = "hg38", gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df, get_constraint = F, get_conserv = F,
propor_samples_split_read = 0.05, extend_region_to_plot = 10000,
collapseTranscripts, transcriptAnnotation,
aceview_annot = NULL, add_custom_annot_track = NULL,
all_split_reads = F){
##### checking statements #####
ensembl_grch38_v92_genes_txdb_genes <- genes(ensembl_grch38_v92_genes_txdb)
if(!ensembl_gene_id %in% ensembl_grch38_v92_genes_txdb_genes$gene_id){
stop(str_c(ensembl_gene_id, " not found in the txdb provided"))
}
if(all(!tissues_to_plot %in% ERs_w_annotation_df$tissue)){
stop(str_c(tissues_to_plot, " not found in tissues"))
}
##### getting the start stop positions to plot #####
gene_cord <- ensembl_grch38_v92_genes_txdb_genes[ensembl_grch38_v92_genes_txdb_genes$gene_id == ensembl_gene_id]
seqnames_to_plot <- as.character(seqnames(gene_cord))
start_to_plot <- (start(gene_cord) - extend_region_to_plot)
end_to_plot <- (end(gene_cord) + extend_region_to_plot)
bp_plotted <- end_to_plot - start_to_plot
ERs_w_annotation_df_to_plot <-
ERs_w_annotation_df %>%
dplyr::filter(seqnames == seqnames_to_plot, start >= start_to_plot, end <= end_to_plot,
tissue %in% tissues_to_plot)
##### Ideogram track - removed because not useful, only for aesthetics #####
# ideo_track <- IdeogramTrack(genome = "hg38", chromosome = seqnames_to_plot, showBandId = TRUE,
#                             fontcolor = "black", size = 1)
# plotTracks(ideo_track, from = start_to_plot, to = end_to_plot)
##### Genome axis track #####
# get symbol
ens_to_symbol <- query_biomart(mart = 38, attributes = c("ensembl_gene_id", "external_gene_name"), filters = "ensembl_gene_id", values = ensembl_gene_id)
gene_id_to_plot <- str_c(na.omit(c(ens_to_symbol$ensembl_gene_id, ens_to_symbol$external_gene_name)), collapse = "/")
ga_track <- GenomeAxisTrack(range = IRanges(start = start(gene_cord), end = end(gene_cord), names = gene_id_to_plot),
showId = TRUE, add53 = TRUE, add35 = TRUE,
fill.range = get_palette("npg", 3)[3], col.range = "black",
cex.id = 1, col = "black", fontcolor = "black", labelPos = "below", size = 2,
background.title = "black", showTitle = T, name = seqnames_to_plot)
# plotTracks(ga_track, from = start_to_plot, to = end_to_plot)
##### Annotation track - ERs #####
annot_track_ERs_all_tissues <- get_annot_track_ERs(ERs_w_annotation_df_to_plot, tissues_to_plot)
##### Data track - split reads #####
d_track_split_read_overlayed_all_tissues <-
get_data_track_split_read(tissues_to_plot = tissues_to_plot,
gtex_split_read_table_mean_cov_df = gtex_split_read_table_mean_cov_df,
ERs_w_annotation_df_to_plot = ERs_w_annotation_df_to_plot,
gtex_split_read_table_annotated_only_junc_coverage = gtex_split_read_table_annotated_only_junc_coverage,
propor_samples_split_read = propor_samples_split_read,
gene_cord = gene_cord,
extend_region_to_plot = extend_region_to_plot,
all_split_reads = all_split_reads)
##### Merge ER and split read tracks #####
ER_split_tracks_ordered_all_tissues <- merge_ER_split_read_tracks(tissues_to_plot, annot_track_ERs_all_tissues, d_track_split_read_overlayed_all_tissues)
# plotTracks(ER_split_tracks_ordered_all_tissues, from = start_to_plot, to = end_to_plot,
#             sizes = rep(1, length(tissues_to_plot) * 4))
##### Gene region track - ensembl #####
print("plotting gene region track for ensembl v92")
gr_track <- GeneRegionTrack(ensembl_grch38_v92_genes_txdb, genome = genome_build, chromosome = seqnames_to_plot, name = "v92",
collapseTranscripts = collapseTranscripts, transcriptAnnotation = transcriptAnnotation, from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(ga_track, ER_split_tracks_ordered_all_tissues, gr_track)
# plotTracks(gr_track, from = start_to_plot, to = end_to_plot, cex.group = 0.4)
##### Gene region track - aceview #####
if(!is.null(aceview_annot)){
if(class(aceview_annot) != "TxDb"){
print("Warning: AceView input not a txdb, skipping adding this as a genome region track")
}else{
print("plotting gene region track for aceview")
gr_track_aceview <- GeneRegionTrack(aceview_annot, genome = genome_build, chromosome = seqnames_to_plot, name = "AV",
collapseTranscripts = "meta", transcriptAnnotation = "gene", from = start_to_plot, to = end_to_plot,
background.title = "black", fontcolor.group = "black", col = "black", col.line = "black" , cex.group = 0.5, size = 1.75)
all_annot_tracks <- c(all_annot_tracks, gr_track_aceview)
}
}
# only plot mean cov/constraint/conserv for single tissue
if(length(tissues_to_plot) == 1){
##### get GR for data tracks - mean coverage/conservation #####
range_to_plot_ir <- IRanges(start = start_to_plot:end_to_plot, width = 1)
range_to_plot_gr <- GRanges(seqnames = seqnames_to_plot,
range_to_plot_ir)
##### Data track - mean coverage #####
d_track_mean_cov_w_cut_off <- get_data_track_mean_cov(gtex_split_read_table_mean_cov_df, tissues_to_plot, range_to_plot_ir, range_to_plot_gr, seqnames_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_mean_cov_w_cut_off)
##### Data track - conservation #####
if(get_conserv == T){
range_to_plot_gr <-
get_conservation_score_for_regions(conserv_score_to_load = "phast_cons_7", gr = range_to_plot_gr)
d_track_conserv <- DataTrack(range_to_plot_gr, type = "a", aggregation = "mean", window = "fixed", windowSize = 25, background.title = "black",
name = "phastcons", size = 1)
# plotTracks(d_track_conserv, from = start_to_plot, to = end_to_plot)
range_to_plot_gr$mean_phast_cons_7 <- NULL
all_annot_tracks <- c(all_annot_tracks, d_track_conserv)
}
##### Data track - constraint #####
if(get_constraint == T){
d_track_constraint <- get_data_track_constraint(seqnames_to_plot, start_to_plot, end_to_plot, CDTS_percentile_N7794_unrelated_all_chrs_gr)
# plotTracks(d_track_constraint, from = start_to_plot, to = end_to_plot)
all_annot_tracks <- c(all_annot_tracks, d_track_constraint)
}
if(!is.null(add_custom_annot_track)){
annot_track_custom <-
AnnotationTrack(add_custom_annot_track,
shape = "box", name = "custom annot", background.title = "black", size = 1, col = "black", fill = "black")
# plotTracks(annot_track_custom, from = start_to_plot, to = end_to_plot, col = "black", fill = "black")
all_annot_tracks <- c(all_annot_tracks, annot_track_custom)
}
}
##### plot tracks #####
list_dummy_tracks <- get_dummy_track_titles(all_annot_tracks, gtex_split_read_table_mean_cov_df)
plotTracks(trackList = all_annot_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.4, fontsize = 8,
sizes = all_annot_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
plotTracks(list_dummy_tracks, from = start_to_plot, to = end_to_plot, title.width = 0.3, add = T, fontsize = 12,
sizes = list_dummy_tracks %>% lapply(FUN = function(x){ displayPars(x)$size}) %>% unlist())
}
library(tidyverse)
library(tidyverse)
library(stringr)
library(Gviz)
library(ggpubr)
library(regioneR)
library(tidyverse)
library(stringr)
library(Gviz)
library(ggpubr)
library(regioneR)
# Set WD ----------------------------------------------------------------------------------------------
# OMIM_wd <- Sys.getenv("OMIM_wd")
# setwd(OMIM_wd)
setwd("/home/dzhang/projects/OMIM_wd")
# Load data -------------------------------------------------------------------------------------------
# Functions -------------------------------------------------------------------------------------------
source("~/R/Proof_Concept/check/visualise_ER_example_gviz_sonia.R")
# Main ------------------------------------------------------------------------------------------------
visualise_ER_example(ERs_w_annotation_df = ERs_w_annotation_all_tissues_width_ab_3_no_cells_sex_specific,
txdb = ensembl_grch38_v92_genes_txdb,
ensembl_gene_id = "ENSG00000145335",
tissues_to_plot = "frontalcortexba9",
genome_build = "hg38",
gtex_split_read_table_mean_cov_df,
tissue_optimal_cut_off_max_gap_df,
get_constraint = F,
get_conserv = F,
propor_samples_split_read = 0.05,
extend_region_to_plot = 10000,
collapseTranscripts = "meta",
transcriptAnnotation = "gene",
aceview_annot = NULL,
add_custom_annot_track = NULL,
all_split_reads = F)
sessionInfo()
grid.newpage()
sessionInfo()
library(grird)
library(grird)
library(grid)
grid.newpage()
grid.newpage
grid.newpage(recording = F)
getHook("before.grid.newpage")
ggplot()
